<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>MySQL on Sou-Nan-De-Gesu</title><link>https://www.soudegesu.com/en/tags/mysql/</link><description>Recent content in MySQL on Sou-Nan-De-Gesu</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Tue, 31 Jul 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://www.soudegesu.com/en/tags/mysql/feed.xml" rel="self" type="application/rss+xml"/><item><title>Ansible playbook configuration for MySQL8 (how to change root password etc.)</title><link>https://www.soudegesu.com/en/mysql/mysql8-password/</link><pubDate>Tue, 31 Jul 2018 00:00:00 +0000</pubDate><guid>https://www.soudegesu.com/en/mysql/mysql8-password/</guid><description>MySQL major version 8 was released on April 2018. I introduce how to write MySQL 8 ansible playbook.
Motivation I usually use AWS. AWS has a database managed service called RDS, and RDS supports MySQL 5.x series. To conduct in-house training using MySQL 8, I needed to make AMI of MySQL 8 with ansible.
Environment CentOS 7 Ansible 2.6.1 Packer 1.1.3 Configuration sample of ansible playbook In this case, I describe only the main task definition part in Ansible, I omit Packer configuration because it becomes redundant.</description></item><item><title>Add partitions periodically in AWS RDS Aurora Cluster (MySQL compatible) with the SQL Procedures</title><link>https://www.soudegesu.com/en/aws/rds-aurora-cluster-partitioning-procedure/</link><pubDate>Mon, 19 Feb 2018 00:00:00 +0000</pubDate><guid>https://www.soudegesu.com/en/aws/rds-aurora-cluster-partitioning-procedure/</guid><description>Introduction RDS Aurora is a managed service provided by AWS. Aurora is a OSS compatible relational database built on cloud.
In this article, I explain table partitioning with date in RDS Aurora MySQL compatible.
Goals Create table partitioned by date on RDS Aurora (MySQL compatible) Add a partition for a day periodically (once a day) Drop records after a certain period of time Handle errors in these operation running As an example, I handle the following hoge table.</description></item></channel></rss>