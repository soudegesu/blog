<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>selenium on Sou-Nan-De-Gesu</title><link>https://www.soudegesu.com/en/tags/selenium/</link><description>Recent content in selenium on Sou-Nan-De-Gesu</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Thu, 16 Jan 2020 08:48:46 +0900</lastBuildDate><atom:link href="https://www.soudegesu.com/en/tags/selenium/feed.xml" rel="self" type="application/rss+xml"/><item><title>Selecting a specific element in Selenium</title><link>https://www.soudegesu.com/en/post/python/selenium-element-selector/</link><pubDate>Thu, 16 Jan 2020 08:48:46 +0900</pubDate><guid>https://www.soudegesu.com/en/post/python/selenium-element-selector/</guid><description>In previous article Waiting for an element to be displayed using the WebDriverWait in Selenium, WebDriverWait is used to prevent the browser from performing the following actions until the condition is satisfied. This time, I will introduce you how to select HTML elements that can also be used in WebDriverWait. Selection with id attribute First of all, I introduce the most common way to specify the id attribute. The id</description></item><item><title>Waiting for an element to be displayed using the WebDriverWait in Selenium</title><link>https://www.soudegesu.com/en/post/python/selenium-wait-element/</link><pubDate>Tue, 04 Jun 2019 11:05:57 +0900</pubDate><guid>https://www.soudegesu.com/en/post/python/selenium-wait-element/</guid><description>In a previous article Avoiding pop-up blocking when opening multiple Firefox tabs simultaneously in Selenium, I presented tips on running Selenium in Firefox. In this article, I will show you some tips for writing Selenium code. Selenium works faster than people. Selenium is fast, but it&amp;rsquo;s easy to overlook waitting when writing code that works with Selenium. The browser communicates and draws the screen when some event is triggered, such</description></item><item><title>Avoiding pop-up blocking when opening multiple Firefox tabs simultaneously in Selenium</title><link>https://www.soudegesu.com/en/post/python/selenium-firefox-tab-restriction/</link><pubDate>Sat, 01 Jun 2019 03:00:00 +0900</pubDate><guid>https://www.soudegesu.com/en/post/python/selenium-firefox-tab-restriction/</guid><description>In previous article Set up the Selenium Webdriver. Let&amp;rsquo;s automate with Python! , I introduced the procedure to build Selenium execution environment in Python. In this article, I would like to introduce a problem I actually ran into when opening multiple URLs in different tabs at the same time in Firefox and how to deal with it. What I originally wanted to do Open multiple URLs (about 100) at the</description></item><item><title>Set up the Selenium Webdriver. Let's automate with Python!</title><link>https://www.soudegesu.com/en/post/python/setup-selenium-webdriver/</link><pubDate>Fri, 31 May 2019 08:09:27 +0900</pubDate><guid>https://www.soudegesu.com/en/post/python/setup-selenium-webdriver/</guid><description>These days, even non-programmers are increasingly doing programming. That&amp;rsquo;s a good thing. Particularly popular with them is the automation of their work using the programming language Python. This means that we can use programs to simplify routine tasks that were previously done by hand. I&amp;rsquo;ve been getting a lot of needs (or rather questions) about running Selenium in Python, so I&amp;rsquo;ve decided to document them. Goals Set up the Selenium</description></item></channel></rss>