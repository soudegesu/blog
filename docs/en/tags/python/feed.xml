<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on Sou-Nan-De-Gesu</title><link>https://www.soudegesu.com/en/tags/python/</link><description>Recent content in Python on Sou-Nan-De-Gesu</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Wed, 02 May 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://www.soudegesu.com/en/tags/python/feed.xml" rel="self" type="application/rss+xml"/><item><title>Google Colaboratory is the best tool for machine learning engineer</title><link>https://www.soudegesu.com/en/python/colaboratory-is-a-good-tool-for-tensorflow-user/</link><pubDate>Wed, 02 May 2018 00:00:00 +0000</pubDate><guid>https://www.soudegesu.com/en/python/colaboratory-is-a-good-tool-for-tensorflow-user/</guid><description>For engineer who use Jupyter Notebook in often, web IDE named Colaboratory is the best tool. Try Colaboratory.
What is Colaboratory? Colaboratory is a web IDE based on Jupyter notebook and hosted by Google.
Not only editor, but also runtime is provided by Google, users don&amp;rsquo;t need to create the environment for development.
Everyone can use Colaboratory without Google account, however, links the account, users earn lots of advantages.</description></item><item><title>Convert date formatted string or epochtime to datetime, and change timezone in Python</title><link>https://www.soudegesu.com/en/python/python-datetime/</link><pubDate>Sun, 22 Apr 2018 00:00:00 +0000</pubDate><guid>https://www.soudegesu.com/en/python/python-datetime/</guid><description>I always search answers on the internet that how to convert date formatted string to datetime and change timezone.
This article is a memo for myself.
There are three types to process date and time in Python. datetime, date, and time. I mainly use datetime in this article.
Environment python 3.6 pytz jupyter notebook Convert epochtime to datetime Now convert numeric formatting epochtime to datetime.
The epochtime is called as Unix time.</description></item><item><title>Setting to avoid python and anaconda conflict using pyenv and pyenv-virtualenv</title><link>https://www.soudegesu.com/en/python/pyenv/anaconda/</link><pubDate>Tue, 28 Feb 2017 00:00:00 +0000</pubDate><guid>https://www.soudegesu.com/en/python/pyenv/anaconda/</guid><description>Introduction I have been using pyenv only to switch versions of python in local environments. However, recently I use anaconda more often. Since python and anaconda conflict when executing activate command, I decided to use pyenv-virtualenv.
Goals Switch python version in one machine Switch the python distribution (anaconda in this case) Resolve conflict between anaconda and pyenv when I execute activate command Activate anaconda without executing the command with full path Both 1 and 2 above are able to solved with pyenv and 3 with pyenv-virtualent.</description></item></channel></rss>