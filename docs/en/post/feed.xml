<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Sou-Nan-De-Gesu</title><link>https://www.soudegesu.com/en/post/</link><description>Recent content in Posts on Sou-Nan-De-Gesu</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Fri, 08 Jan 2021 15:12:06 +0900</lastBuildDate><atom:link href="https://www.soudegesu.com/en/post/feed.xml" rel="self" type="application/rss+xml"/><item><title>Provisioning a edge device in a private network with Ansible via AWS Session Manager</title><link>https://www.soudegesu.com/en/post/aws/provisioning-with-ansible-via-ssm/</link><pubDate>Fri, 08 Jan 2021 15:12:06 +0900</pubDate><guid>https://www.soudegesu.com/en/post/aws/provisioning-with-ansible-via-ssm/</guid><description>In this article, I will show you how to access devices in a private network in a remote location to manage the device configuration by AWS System Manager Session Manager and Ansible. Device provisioning in a private network I would like to run a configuration management script from my development machine at home on a remotely located device. The image is as follows. In most cases, the remotely located devices</description></item><item><title>Selecting a specific element in Selenium</title><link>https://www.soudegesu.com/en/post/python/selenium-element-selector/</link><pubDate>Thu, 16 Jan 2020 08:48:46 +0900</pubDate><guid>https://www.soudegesu.com/en/post/python/selenium-element-selector/</guid><description>In previous article Waiting for an element to be displayed using the WebDriverWait in Selenium, WebDriverWait is used to prevent the browser from performing the following actions until the condition is satisfied. This time, I will introduce you how to select HTML elements that can also be used in WebDriverWait. Selection with id attribute First of all, I introduce the most common way to specify the id attribute. The id</description></item><item><title>Python string concatenation: + operator/join function/format function/f-strings</title><link>https://www.soudegesu.com/en/post/python/concat_string/</link><pubDate>Mon, 28 Oct 2019 08:41:04 +0900</pubDate><guid>https://www.soudegesu.com/en/post/python/concat_string/</guid><description>This time, I will introduce the method of string concatenation in Python. Here, the Python version is assumed to be 3.x. Concatenate with &amp;lsquo;+&amp;rsquo; operator The simplest way is string concatenation using the + operator. Some programming languages ​​don't support string concatenation with the + operator, but Python has no problem. 1a = &amp;#39;aaa&amp;#39; 2b = &amp;#39;bbb&amp;#39; 3c = &amp;#39;ccc&amp;#39; 4txt = a +</description></item><item><title>Use Range function in Python</title><link>https://www.soudegesu.com/en/post/python/for-in-range/</link><pubDate>Fri, 25 Oct 2019 08:41:41 +0900</pubDate><guid>https://www.soudegesu.com/en/post/python/for-in-range/</guid><description>Python has more utility function implementations than other programming languages. This time, I will introduce the for statement processing using the Python range() function. Environment I have confirmed the operation in the following environment. Python 3.8 range() function is A range () is a Python built-in function used to create a sequence of numbers and mainly used in combination with the for statement. Takes several arguments to control the rules</description></item><item><title>Autocomplete your code in Jupyter Notebook</title><link>https://www.soudegesu.com/en/post/python/jupyter-autocomplete/</link><pubDate>Wed, 21 Aug 2019 07:51:20 +0900</pubDate><guid>https://www.soudegesu.com/en/post/python/jupyter-autocomplete/</guid><description>Jupyter Notebook is often used as a Python development environment, but code completion is not enabled by default. That's why it's a bit of a problem when importing packages. This time, I introduce some tips for code completion in Jupyter Notebook. Autocomplete the code Code completion in the IDE is an important feature for smooth implementation of the program. Some people call it autocomplete , and others call it intelli</description></item><item><title>Waiting for an element to be displayed using the WebDriverWait in Selenium</title><link>https://www.soudegesu.com/en/post/python/selenium-wait-element/</link><pubDate>Tue, 04 Jun 2019 11:05:57 +0900</pubDate><guid>https://www.soudegesu.com/en/post/python/selenium-wait-element/</guid><description>In a previous article Avoiding pop-up blocking when opening multiple Firefox tabs simultaneously in Selenium, I presented tips on running Selenium in Firefox. In this article, I will show you some tips for writing Selenium code. Selenium works faster than people. Selenium is fast, but it's easy to overlook waitting when writing code that works with Selenium. The browser communicates and draws the screen when some event is triggered, such</description></item><item><title>Avoiding pop-up blocking when opening multiple Firefox tabs simultaneously in Selenium</title><link>https://www.soudegesu.com/en/post/python/selenium-firefox-tab-restriction/</link><pubDate>Sat, 01 Jun 2019 03:00:00 +0900</pubDate><guid>https://www.soudegesu.com/en/post/python/selenium-firefox-tab-restriction/</guid><description>In previous article Set up the Selenium Webdriver. Let's automate with Python! , I introduced the procedure to build Selenium execution environment in Python. In this article, I would like to introduce a problem I actually ran into when opening multiple URLs in different tabs at the same time in Firefox and how to deal with it. What I originally wanted to do Open multiple URLs (about 100) at the</description></item><item><title>Set up the Selenium Webdriver. Let's automate with Python!</title><link>https://www.soudegesu.com/en/post/python/setup-selenium-webdriver/</link><pubDate>Fri, 31 May 2019 08:09:27 +0900</pubDate><guid>https://www.soudegesu.com/en/post/python/setup-selenium-webdriver/</guid><description>These days, even non-programmers are increasingly doing programming. That's a good thing. Particularly popular with them is the automation of their work using the programming language Python. This means that we can use programs to simplify routine tasks that were previously done by hand. I've been getting a lot of needs (or rather questions) about running Selenium in Python, so I've decided to document them. Goals Set up the Selenium</description></item><item><title>HTTP requests in Python3 with Requests library</title><link>https://www.soudegesu.com/en/post/python/http-request-with-requests/</link><pubDate>Mon, 27 May 2019 09:12:22 +0900</pubDate><guid>https://www.soudegesu.com/en/post/python/http-request-with-requests/</guid><description>In past article &amp;ldquo;HTTP requests in Python3 with urllib.request module&amp;quot;, I wrote simple code samples for HTTP requests with urllib.request module which is a package in Python. In this article, I introduce Requests. What is Requests Requests is a package for HTTP request. Requests is a human readable package for HTTP request with wrapping urllib. It has a simple interface and supports lots of feature as follows. International Domains and</description></item><item><title>HTTP requests in Python3 with urllib.request module</title><link>https://www.soudegesu.com/en/post/python/http-request-with-urllib/</link><pubDate>Tue, 02 Apr 2019 08:11:12 +0900</pubDate><guid>https://www.soudegesu.com/en/post/python/http-request-with-urllib/</guid><description>In this article, I introduced how to use urllib.request module to request with HTTP in Python. Environment Runtime environment is as follows. python 3.7 Ordinal HTTP request HTTP GET request with an Request object Use Request object included in urllib.request module. Create Request object instance as follows. 1from urllib.request import * 2 3req = Request(url=&amp;#39;https://docs.python.org/ja/&amp;#39;, headers={}, method=&amp;#39;GET&amp;#39;) Access to Request object property. You can see the host information and path</description></item><item><title>Use PyPDF2 - which PyPDF 2 or PyPDF 3 should be used?</title><link>https://www.soudegesu.com/en/post/python/difference-between-pypdf2-and-pypdf3/</link><pubDate>Mon, 03 Dec 2018 10:19:07 +0900</pubDate><guid>https://www.soudegesu.com/en/post/python/difference-between-pypdf2-and-pypdf3/</guid><description>Introduction In previous article, we can extract text on a PDF file using PyPDF2. Use PyPDF2 - open PDF file or encrypted PDF file Use PyPDF2 - extract text data from PDF file I will introduce PyPDF3 in this article. PyPDF2 and PyPDF3 exist When I looked for various usage of PyPDF2, I found the follwing commnet in StackOverflow. The PyPDF2 has been stopped since 3 years ago?! And, new</description></item><item><title>Use PyPDF2 - extract text data from PDF file</title><link>https://www.soudegesu.com/en/post/python/extract-text-from-pdf-with-pypdf2/</link><pubDate>Sun, 02 Dec 2018 17:29:29 +0900</pubDate><guid>https://www.soudegesu.com/en/post/python/extract-text-from-pdf-with-pypdf2/</guid><description>Introduction In previous article titled &amp;lsquo;Use PyPDF2 - open PDF file or encrypted PDF file', I introduced how to read PDF file with PdfFileReader. Extract text data from opened PDF file this time. Preparation Prepare a PDF file for working. Download Executive Order as before. It looks like below. There are three pages in all. Accessing to pages Accessing to arbitrary page The following code describes accessing the specified page</description></item><item><title>Use PyPDF2 - open PDF file or encrypted PDF file</title><link>https://www.soudegesu.com/en/post/python/open-pdf-with-pypdf2/</link><pubDate>Fri, 30 Nov 2018 10:54:40 +0900</pubDate><guid>https://www.soudegesu.com/en/post/python/open-pdf-with-pypdf2/</guid><description>Motivation Since I want to work PDF file with Python on my work, I investigate what library can do that and how to use it. Preparation The runtime and module version are as below. python 3.6 PyPDF2 1.26.0 Install PyPDF2 To work PDF file with Python, PyPDF2 is often used. PyPDF2 can Extract text from PDF file Work existing PDF file and create new one Let's install with pip command.</description></item><item><title>Recommended IDEs or code editors for Python beginner</title><link>https://www.soudegesu.com/en/post/python/recommended-ide/</link><pubDate>Tue, 27 Nov 2018 09:49:50 +0900</pubDate><guid>https://www.soudegesu.com/en/post/python/recommended-ide/</guid><description>Motivation My colleages who are Python beginners often asks me my recommended Python IDE. After hearing what they'd like to do with Python from them at first, I suggest one of several IDEs or code editors. In this article, I will introduce Python IDEs and code editors use cases. What is an IDE ? An IDE is an abbreviation for Integrated Development Environment. We have several steps for developing source</description></item><item><title>Use openpyxl - Convert to DataFrame in Pandas</title><link>https://www.soudegesu.com/en/post/python/pandas-with-openpyxl/</link><pubDate>Sat, 13 Oct 2018 06:52:26 +0900</pubDate><guid>https://www.soudegesu.com/en/post/python/pandas-with-openpyxl/</guid><description>Introduction Previously, I wrote several articles on working Excel files using openpyxl. Use openpyxl - open, save Excel files in Python Use openpyxl - create a new Worksheet, change sheet property in Python Use openpyxl - read and write Cell in Python In this article, I introduce how to convert openpyxl data to Pandas data format called DataFrame. Preparation Install modules First, install module with pip command. pip install openpyxl</description></item><item><title>Use openpyxl - read and write Cell in Python</title><link>https://www.soudegesu.com/en/post/python/cell-excel-with-openpyxl/</link><pubDate>Sun, 02 Sep 2018 09:38:14 +0900</pubDate><guid>https://www.soudegesu.com/en/post/python/cell-excel-with-openpyxl/</guid><description>Introduction In previous article, &amp;ldquo;Use openpyxl - create a new Worksheet, change sheet property in Python&amp;quot;, I introduced how to create a new Worksheet and change Worksheet properties. In this article I show how to read and write Cell in Excel with Python. Enter values to Cell Worksheet object has a position of Cell as property. That is dictionary type and consists of row and column number. Using them, access</description></item><item><title>Use openpyxl - create a new Worksheet, change sheet property in Python</title><link>https://www.soudegesu.com/en/post/python/sheet-excel-with-openpyxl/</link><pubDate>Fri, 31 Aug 2018 08:53:18 +0900</pubDate><guid>https://www.soudegesu.com/en/post/python/sheet-excel-with-openpyxl/</guid><description>Introduction In previous article, I showed how to create a new Excel file with openpyxl in Python. In this article, I create a new Worksheet, change sheet property Excel files in Python. Environment Runtime environment is as below. python 3.6 openpyxl 2.5.6 Create a new Worksheet Use create_sheet function to add new Worksheet. 1from openpyxl.workbook import Workbook 2 3wb = Workbook() 4 5ws1 = wb.create_sheet(&amp;#34;Sheet_A&amp;#34;) 6ws1.title = &amp;#34;Title_A&amp;#34; 7 8ws2</description></item><item><title>Use openpyxl - open, save Excel files in Python</title><link>https://www.soudegesu.com/en/post/python/create-excel-with-openpyxl/</link><pubDate>Thu, 30 Aug 2018 18:34:52 +0900</pubDate><guid>https://www.soudegesu.com/en/post/python/create-excel-with-openpyxl/</guid><description>Introduction In this article I show how to work Excel with openpyxl. Environment Runtime environment is as below. python 3.6 openpyxl 2.5.6 Install Use openpyxl. The openpyxl official document says .. openpyxl is a Python library to read/write Excel 2010 xlsx/xlsm/xltx/xltm files. However, openpyxl can also work with Mac Excel 2016 on my Macbook Pro. Let's install with pip command. 1pip install openpyxl Create new Excel file Import openpyxl At</description></item></channel></rss>