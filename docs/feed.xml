<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>そうなんでげす</title><link>https://www.soudegesu.com/</link><description>Recent content on そうなんでげす</description><generator>Hugo -- gohugo.io</generator><language>ja-JP</language><lastBuildDate>Thu, 07 May 2020 09:46:10 +0900</lastBuildDate><atom:link href="https://www.soudegesu.com/feed.xml" rel="self" type="application/rss+xml"/><item><title>ARMアーキテクチャのLinuxマシンでAWS CLI v2をインストールする</title><link>https://www.soudegesu.com/post/aws/aws-cli-v2-on-arm/</link><pubDate>Thu, 07 May 2020 09:46:10 +0900</pubDate><guid>https://www.soudegesu.com/post/aws/aws-cli-v2-on-arm/</guid><description>2020/01 にAWS CLI v2がGAになりました。今回は私がAWS CLI v2で少しハマったポイントを共有します。 なお、この情報は2020/05現在のものであり</description></item><item><title>MediaRecorderでブラウザ上で音声と映像を取得してWebm形式で保存する</title><link>https://www.soudegesu.com/post/javascript/web-audio-api-save-as-webm/</link><pubDate>Mon, 04 May 2020 09:34:18 +0900</pubDate><guid>https://www.soudegesu.com/post/javascript/web-audio-api-save-as-webm/</guid><description>GCPやAzure等のSaaSにて音声認識や画像認識を使う際、予め録音しておいた音声データを学習用の元データとして使うことができます。 ここで</description></item><item><title>PythonのSeleniumで特定の要素を指定して取得する</title><link>https://www.soudegesu.com/post/python/selenium-element-selector/</link><pubDate>Thu, 16 Jan 2020 08:48:46 +0900</pubDate><guid>https://www.soudegesu.com/post/python/selenium-element-selector/</guid><description>以前の記事 Seleniumのコードを安定して動かすためにWaitを使って要素を待つ では、 WebDriverWait を使って特定の条件が満たされるまで次の動作を行わな</description></item><item><title>Jetson Nanoで外部接続したUSBマイクが音を拾ってくれない時の対処法</title><link>https://www.soudegesu.com/post/jetson/recognize-external-microphone/</link><pubDate>Tue, 31 Dec 2019 23:33:33 +0900</pubDate><guid>https://www.soudegesu.com/post/jetson/recognize-external-microphone/</guid><description>Jetson Nano を使って音声データを収集する際に接続された外部USBマイクで音が拾えなかったため、原因とその対処法を紹介します。 実行環境 今回の動作確認環</description></item><item><title>Pythonの文字列連結（文字列結合）: +演算子/join関数/format関数/f-strings</title><link>https://www.soudegesu.com/post/python/concat_string/</link><pubDate>Mon, 28 Oct 2019 08:41:04 +0900</pubDate><guid>https://www.soudegesu.com/post/python/concat_string/</guid><description>Pythonで良く使う文字列操作の備忘メモです。今回はPythonで文字列連結（文字列結合）の方法を紹介します。 なお、ここではPythonの</description></item><item><title>Pythonのrange関数を使ったfor文の書き方</title><link>https://www.soudegesu.com/post/python/for-in-range/</link><pubDate>Fri, 25 Oct 2019 08:41:41 +0900</pubDate><guid>https://www.soudegesu.com/post/python/for-in-range/</guid><description>Pythonでは他のプログラミング言語と比べて、ユーティリティ関数の実装が多くあります。 今回はその中でもPythonの range() 関数を使ったfor文</description></item><item><title>React+JSXでは1つの要素しか返却してはいけないのでFragmentを使う</title><link>https://www.soudegesu.com/post/javascript/react-jsx-placement/</link><pubDate>Thu, 03 Oct 2019 08:25:19 +0900</pubDate><guid>https://www.soudegesu.com/post/javascript/react-jsx-placement/</guid><description>今日は React の小ネタです。 ReactのJSX React ではエレメントをコンポーネント化する仕組みとして JSXを使います。 Function ComponentやReact</description></item><item><title>Jupyter Notebookでコードの自動補完をする</title><link>https://www.soudegesu.com/post/python/jupyter-autocomplete/</link><pubDate>Wed, 21 Aug 2019 07:51:20 +0900</pubDate><guid>https://www.soudegesu.com/post/python/jupyter-autocomplete/</guid><description>Jupyter Notebook はPythonの開発環境として良く利用されますが、デフォルトではコード補完が有効になっていません。 そのためパッケージのimport時には</description></item><item><title>Nuxt.jsをはじめよう - ESLint+Prettierでコードをフォーマットする</title><link>https://www.soudegesu.com/post/javascript/format-nuxt-typescript-on-save/</link><pubDate>Mon, 19 Aug 2019 08:27:57 +0900</pubDate><guid>https://www.soudegesu.com/post/javascript/format-nuxt-typescript-on-save/</guid><description>前回の記事 ではTypeScriptで Nuxt.js のコードを書き直しました。 今回は ESLint と Prettier によってコードフォーマットを適用します。 コードをきれいに保つ コー</description></item><item><title>Nuxt.jsをはじめよう - TypeScriptでコードを書く</title><link>https://www.soudegesu.com/post/javascript/write-nuxt-with-typescript/</link><pubDate>Tue, 13 Aug 2019 14:11:17 +0900</pubDate><guid>https://www.soudegesu.com/post/javascript/write-nuxt-with-typescript/</guid><description>前回の記事 では Vuex を使った状態管理の仕方を書きました。 今回はNuxt.jsのコードをTypeScriptで書くための設定や書き方などを紹介しま</description></item><item><title>Nuxt.jsをはじめよう - Vuexを使ってデータを渡す</title><link>https://www.soudegesu.com/post/javascript/store-with-nuxt/</link><pubDate>Fri, 09 Aug 2019 11:02:16 +0900</pubDate><guid>https://www.soudegesu.com/post/javascript/store-with-nuxt/</guid><description>前回の記事 ではクエリパラメータやパスパラメータを使って画面間のデータの受け渡しについて紹介しました。今回は Vuex を使ってデータの受け渡しを行いた</description></item><item><title>Nuxt.jsをはじめよう - クエリパラメータやパスパラメータを使ってデータを渡す</title><link>https://www.soudegesu.com/post/javascript/send-and-recieve-data-in-nuxt/</link><pubDate>Fri, 09 Aug 2019 08:31:36 +0900</pubDate><guid>https://www.soudegesu.com/post/javascript/send-and-recieve-data-in-nuxt/</guid><description>前回の記事 では画面遷移の仕方を紹介しました。 画面間でデータのを受け渡しをする方法を紹介します。Nuxt.js というか Vue.js の仕様も含まれています</description></item><item><title>Nuxt.jsをはじめよう - nuxt-linkで画面遷移をする</title><link>https://www.soudegesu.com/post/javascript/nuxt-page-link/</link><pubDate>Fri, 09 Aug 2019 06:51:05 +0900</pubDate><guid>https://www.soudegesu.com/post/javascript/nuxt-page-link/</guid><description>前回の記事 では Nuxt.jsプロジェクトの初期化を行いました。 今回はまず Nuxt.js で画面遷移をします。 事前準備：画面を複数準備する まずは 遷移元ページ</description></item><item><title>AWS CodeCommitからgit cloneする方法</title><link>https://www.soudegesu.com/post/aws/clone_from_codecommit/</link><pubDate>Thu, 08 Aug 2019 10:49:50 +0900</pubDate><guid>https://www.soudegesu.com/post/aws/clone_from_codecommit/</guid><description>AWS CodeCommitを使うプロジェクトに参画する機会があり、使い方を備忘録としてまとめようと思います。 CodeCommitからgit clo</description></item><item><title>Nuxt.jsをはじめよう - Nuxt.jsのプロジェクトを新規作成する</title><link>https://www.soudegesu.com/post/javascript/initialize-nuxt-project/</link><pubDate>Thu, 08 Aug 2019 08:32:35 +0900</pubDate><guid>https://www.soudegesu.com/post/javascript/initialize-nuxt-project/</guid><description>前回の記事 では Nuxt.jsを使う前の注意点をかるっとまとめました。 今回は Nuxt.js を使って新規プロジェクトの作成をやってみます。 動作環境 Node 12.4.0 npx コマ</description></item><item><title>Nuxt.jsをはじめよう - Nuxt.jsを使う前に気をつけたいこと</title><link>https://www.soudegesu.com/post/javascript/start-project-with-nuxt/</link><pubDate>Wed, 07 Aug 2019 08:38:55 +0900</pubDate><guid>https://www.soudegesu.com/post/javascript/start-project-with-nuxt/</guid><description>わけあって Nuxt.js に触れる機会があったため、得られた知見やTipsをまとめていこうと思います。 まずは、Nuxt.jsを使う前に覚悟しておいてほしい</description></item><item><title>Raspberry Piでメモリを拡張したい時にZramを使う</title><link>https://www.soudegesu.com/post/raspberry/expand-memory-with-zram/</link><pubDate>Mon, 01 Jul 2019 07:53:02 +0900</pubDate><guid>https://www.soudegesu.com/post/raspberry/expand-memory-with-zram/</guid><description>Raspberry Pi で電子工作をしている時にメモリ不足に陥りました。 これに対処すべく調査していった結果、Zram という機構が使えそうだったので試してみました</description></item><item><title>Raspberry PiでWifiを設定する方法</title><link>https://www.soudegesu.com/post/raspberry/wifi-setting-up/</link><pubDate>Fri, 28 Jun 2019 08:14:11 +0900</pubDate><guid>https://www.soudegesu.com/post/raspberry/wifi-setting-up/</guid><description>Raspberry Pi のWifi設定について備忘録を書きます。 なお、今回私が使っているのは Raspberry Pi 3B+ になります。 Raspberry Pi のGUIから設定する方法 Raspberry Pi にディスプレイを接</description></item><item><title>Ubuntu 18に対してPacker + Ansibleを実行すると/usr/bin/pythonが見つからない問題への対処</title><link>https://www.soudegesu.com/post/aws/exec-ansible-to-ubuntu-tips/</link><pubDate>Fri, 28 Jun 2019 07:35:02 +0900</pubDate><guid>https://www.soudegesu.com/post/aws/exec-ansible-to-ubuntu-tips/</guid><description>今までCentOSや派生のAmazonLinux2を使うことが多かったです。AMIをコード化するにあたり Packer やプロビジョナーの Ansible もそれらのOS</description></item><item><title>はじめよう！Visual Studio Code Live Share！</title><link>https://www.soudegesu.com/post/vscode/vscode-live-share/</link><pubDate>Fri, 07 Jun 2019 08:07:14 +0900</pubDate><guid>https://www.soudegesu.com/post/vscode/vscode-live-share/</guid><description>普段職場では、ペアプログラミングやモブプログラミングを目的に応じて使いけています。 今回は複数人での開発作業に新しい風を巻き起こすかもしれない</description></item><item><title>Seleniumのコードを安定して動かすためにWaitを使って要素を待つ</title><link>https://www.soudegesu.com/post/python/selenium-wait-element/</link><pubDate>Tue, 04 Jun 2019 11:05:57 +0900</pubDate><guid>https://www.soudegesu.com/post/python/selenium-wait-element/</guid><description>以前の記事 SeleniumでFirefoxの複数タブを同時に開く時にポップアップブロックされる問題に対処する では、ちょっとニッチなFiref</description></item><item><title>SeleniumでFirefoxの複数タブを同時に開く時にポップアップブロックされる問題に対処する</title><link>https://www.soudegesu.com/post/python/selenium-firefox-tab-restriction/</link><pubDate>Sat, 01 Jun 2019 03:00:00 +0900</pubDate><guid>https://www.soudegesu.com/post/python/selenium-firefox-tab-restriction/</guid><description>以前の記事 Pythonで自動化しよう！ ー Selenium Webdriverをセットアップする では、 PythonでSeleniumの実行環境の構築手順を紹介</description></item><item><title>Pythonで自動化しよう！ ー Selenium Webdriverをセットアップする</title><link>https://www.soudegesu.com/post/python/setup-selenium-webdriver/</link><pubDate>Fri, 31 May 2019 08:09:27 +0900</pubDate><guid>https://www.soudegesu.com/post/python/setup-selenium-webdriver/</guid><description>最近では、ノンプログラマーでもプログラミングをすることが増えてきました。いいことですね。 特に人気なのはプログラミング言語Pythonを使った</description></item><item><title>Python3でHTTP通信をする（Requestsを使う）</title><link>https://www.soudegesu.com/post/python/http-request-with-requests/</link><pubDate>Mon, 27 May 2019 09:12:22 +0900</pubDate><guid>https://www.soudegesu.com/post/python/http-request-with-requests/</guid><description>以前の記事 「Python3でHTTP通信をする（urllib.requestモジュールを使う）」 では、Pythonの標準モジュールである urllib.request を</description></item><item><title>クラウド上でアプリをビルドしたい！CodeBuildでAndroidアプリをビルドするときのTips</title><link>https://www.soudegesu.com/post/aws/codebuild-tips-with-android/</link><pubDate>Mon, 27 May 2019 08:30:00 +0900</pubDate><guid>https://www.soudegesu.com/post/aws/codebuild-tips-with-android/</guid><description>CodeBuild の小ネタです。AWS CodeBuildはyamlの定義に従ってビルド処理をマネージドサービスです。 今回はAndroidアプリをCodeBu</description></item><item><title>Jenkins2をコード化しよう - その４：Swarm PluginでJenkins Slaveを登録する</title><link>https://www.soudegesu.com/post/jenkins/jenkins-as-code-with-provisioning-with-swarm/</link><pubDate>Sat, 25 May 2019 15:35:08 +0900</pubDate><guid>https://www.soudegesu.com/post/jenkins/jenkins-as-code-with-provisioning-with-swarm/</guid><description>前回の記事 Jenkins2をコード化しよう - その３：Jenkins Job DSLプラグインでジョブをコード化する ではJenkinsのジョブをGro</description></item><item><title>Jenkins2をコード化しよう - その３：Jenkins Job DSLプラグインでジョブをコード化する</title><link>https://www.soudegesu.com/post/jenkins/jenkins-as-code-with-generate-job-dsl-plugin/</link><pubDate>Fri, 24 May 2019 15:35:08 +0900</pubDate><guid>https://www.soudegesu.com/post/jenkins/jenkins-as-code-with-generate-job-dsl-plugin/</guid><description>前回の記事 Jenkins2をコード化しよう - その２：Jenkinsの起動時にプログラム（Groovy Hook Script）を動かす ではJenkin</description></item><item><title>Jenkins2をコード化しよう - その２：Jenkinsの起動時にプログラム（Groovy Hook Script）を動かす</title><link>https://www.soudegesu.com/post/jenkins/jenkins-as-code-with-init-groovy-d/</link><pubDate>Wed, 22 May 2019 15:35:08 +0900</pubDate><guid>https://www.soudegesu.com/post/jenkins/jenkins-as-code-with-init-groovy-d/</guid><description>前回の記事 Jenkins2をコード化しよう - その１：Ansibleでプロビジョニングする では Jenkins2をAnsibleでコード化するた</description></item><item><title>Jenkins2をコード化しよう - その１：Ansibleでプロビジョニングする</title><link>https://www.soudegesu.com/post/jenkins/jenkins-as-code-with-ansible/</link><pubDate>Wed, 15 May 2019 15:35:08 +0900</pubDate><guid>https://www.soudegesu.com/post/jenkins/jenkins-as-code-with-ansible/</guid><description>今回は、CIサーバとして広く使われているJenkinsをAnsibleでコード化するための手順を紹介します。 背景：Jenkinsサーバがカオ</description></item><item><title>Python3でHTTP通信をする（urllib.requestモジュールを使う）</title><link>https://www.soudegesu.com/post/python/http-request-with-urllib/</link><pubDate>Tue, 02 Apr 2019 08:11:12 +0900</pubDate><guid>https://www.soudegesu.com/post/python/http-request-with-urllib/</guid><description>今回はPythonでHTTP通信を行うためのモジュールである urllib.request モジュールを紹介します。 環境情報 今回は以下の環境にて動作確認をしています。 python 3.7</description></item><item><title>「Javaは起動が遅い」の通説を覆すか？QuarkusでSpringをネイティブコンパイルしてみる</title><link>https://www.soudegesu.com/post/java/get-started-quarkus/</link><pubDate>Wed, 20 Mar 2019 08:55:39 +0900</pubDate><guid>https://www.soudegesu.com/post/java/get-started-quarkus/</guid><description>今回はRedhatが提供する Quarkus のSpringプラグインを試してみました。 「Javaは起動が遅い」 過去、他のプログラミング言語使用者に「Jav</description></item><item><title>TerraformでRDS Auroraクラスタのリストアをする</title><link>https://www.soudegesu.com/post/aws/restore-aurora-cluster-with-terraform/</link><pubDate>Wed, 09 Jan 2019 08:28:42 +0900</pubDate><guid>https://www.soudegesu.com/post/aws/restore-aurora-cluster-with-terraform/</guid><description>今回は Terraform の小ネタです。 RDS Aurora クラスタをリストアする方法を紹介します。 モチベーション：うっかりAuroraクラスタをdestroyしてしまった Terraform</description></item><item><title>Style Dr. CHAIR Plusは子持ち腰痛持ちを救う</title><link>https://www.soudegesu.com/post/engineer-life/style-doctor-chair-review/</link><pubDate>Thu, 06 Dec 2018 11:07:53 +0900</pubDate><guid>https://www.soudegesu.com/post/engineer-life/style-doctor-chair-review/</guid><description>今回は技術に関係のない話をします。この椅子が最高という話です。 「子持ちは腰痛になる」というジンクス 私には子供が3人います。そして私は腰痛持ち</description></item><item><title>PDFをPython（PyPDF2）で操作する - 複数ページをマージして透かしを入れる</title><link>https://www.soudegesu.com/post/python/merge-files-with-pypdf2/</link><pubDate>Wed, 05 Dec 2018 10:23:41 +0900</pubDate><guid>https://www.soudegesu.com/post/python/merge-files-with-pypdf2/</guid><description>以前に書いた以下の記事では、PyPDF2 を用いて、PDFファイルからテキスト情報を抽出するまでを行うことができました。 PDFをPython（</description></item><item><title>PDFをPython（PyPDF2）で操作する - PyPDF2とPyPDF3のどちらを使うと良いのか</title><link>https://www.soudegesu.com/post/python/difference-between-pypdf2-and-pypdf3/</link><pubDate>Mon, 03 Dec 2018 10:19:07 +0900</pubDate><guid>https://www.soudegesu.com/post/python/difference-between-pypdf2-and-pypdf3/</guid><description>以前に書いた以下の記事では、PyPDF2 を用いて、PDFファイルからテキスト情報を抽出するまでを行うことができました。 PDFをPython（</description></item><item><title>PDFをPython（PyPDF2）で操作する - PDFからテキストを抽出する</title><link>https://www.soudegesu.com/post/python/extract-text-from-pdf-with-pypdf2/</link><pubDate>Sun, 02 Dec 2018 17:29:29 +0900</pubDate><guid>https://www.soudegesu.com/post/python/extract-text-from-pdf-with-pypdf2/</guid><description>前回の記事、 PDFをPython（PyPDF2）で操作する - PDF・暗号化PDFファイルの読み込み では、 PyPDF2 の PdfFileReader を使ってPDFファイルの読み込</description></item><item><title>PDFをPython（PyPDF2）で操作する - PDF・暗号化PDFファイルの読み込み</title><link>https://www.soudegesu.com/post/python/open-pdf-with-pypdf2/</link><pubDate>Fri, 30 Nov 2018 10:54:40 +0900</pubDate><guid>https://www.soudegesu.com/post/python/open-pdf-with-pypdf2/</guid><description>今回はPDFファイルをPythonで操作する方法を紹介したいと思います。 事前準備 まずは事前準備を行いましょう。 なお、実行環境との依存モジュー</description></item><item><title>Python初心者にオススメのIDE（エディタ）</title><link>https://www.soudegesu.com/post/python/recommended-ide/</link><pubDate>Tue, 27 Nov 2018 09:49:50 +0900</pubDate><guid>https://www.soudegesu.com/post/python/recommended-ide/</guid><description>初めてPythonを触る方に 「Pythonで開発する時にIDEは何を使えば良いでしょうか？」 とよく聞かれます。 手元でささっと動かすだけであれ</description></item><item><title>PandasでJSON形式の列データを複数列に展開する</title><link>https://www.soudegesu.com/post/python/flatten-json-column-with-pandas/</link><pubDate>Sat, 10 Nov 2018 07:57:16 +0900</pubDate><guid>https://www.soudegesu.com/post/python/flatten-json-column-with-pandas/</guid><description>過去、Pandas を使った列データの処理について様々書きました。 PandasでNaNの列を処理する Pandasで列データの前処理を行う小技集</description></item><item><title>RustupでRustの環境構築をする　- インストールからツールチェインの固定まで</title><link>https://www.soudegesu.com/post/rust/rust-with-rustup/</link><pubDate>Sun, 28 Oct 2018 07:09:38 +0900</pubDate><guid>https://www.soudegesu.com/post/rust/rust-with-rustup/</guid><description>プログラミング言語 Rust を学習する必要がでてきたので、 環境構築手順をまとめたいと思います。 今回はMacOS X上で Homebrew を使ってインストールする手順に</description></item><item><title>FIDO2ということで、WebAuthn（Web Authentication）を試してみる</title><link>https://www.soudegesu.com/post/javascript/web-authentication-api/</link><pubDate>Wed, 24 Oct 2018 08:07:24 +0900</pubDate><guid>https://www.soudegesu.com/post/javascript/web-authentication-api/</guid><description>技術評論社 の刊行物である WEB+DB PRESS Vol.107 に Web Authentication の特集が組まれていました。タイミングを合わせたのか、publickeyでも 「Yahoo! JAPANが指紋</description></item><item><title>CodeBuildプロジェクトをコード化する時のServiceRoleのハマりポイント</title><link>https://www.soudegesu.com/post/aws/codebuild_error_with_exceed_policy_num/</link><pubDate>Sun, 21 Oct 2018 09:22:45 +0900</pubDate><guid>https://www.soudegesu.com/post/aws/codebuild_error_with_exceed_policy_num/</guid><description>CodeBuild の小ネタです。普段は Terraform を使って、インフラのコード化を行っています。 今回、 CodeBuild をコード化するに当たって発生した困ったことの共有をします。 複数の</description></item><item><title>Pandasで列データの前処理を行う小技集</title><link>https://www.soudegesu.com/post/python/pandas-preprocess-columns/</link><pubDate>Thu, 18 Oct 2018 07:45:45 +0900</pubDate><guid>https://www.soudegesu.com/post/python/pandas-preprocess-columns/</guid><description>PandasでNaNの列を処理する では NaN のデータとなってしまう列データの処理に関して説明しました。 今回は、列のデータを前処理するために使う他</description></item><item><title>PandasでNaNの列を処理する</title><link>https://www.soudegesu.com/post/python/pandas_with_nan_columns/</link><pubDate>Mon, 15 Oct 2018 08:39:08 +0900</pubDate><guid>https://www.soudegesu.com/post/python/pandas_with_nan_columns/</guid><description>Pandas でデータを扱うことで、データ分析の前処理が格段に楽になります。 列データにおける NaN の処理を例に、Pandasの便利さの説明をしたいと思います</description></item><item><title>PandasでDataFrameの追加や結合をする</title><link>https://www.soudegesu.com/post/python/pandas-merge-data/</link><pubDate>Sun, 14 Oct 2018 16:31:14 +0900</pubDate><guid>https://www.soudegesu.com/post/python/pandas-merge-data/</guid><description>以前書いた ExcelをPython（openpyxl）で操作する - PandasのDataFrameに変換 では Pandas でExcelファイルの読み込み</description></item><item><title>ExcelをPython（openpyxl）で操作する - PandasのDataFrameに変換</title><link>https://www.soudegesu.com/post/python/pandas-with-openpyxl/</link><pubDate>Sat, 13 Oct 2018 06:52:26 +0900</pubDate><guid>https://www.soudegesu.com/post/python/pandas-with-openpyxl/</guid><description>以前、openpyxl を使ってExcelファイルの操作に関する記事をいくつか書きました。 ExcelをPython（openpyxl）で操作す</description></item><item><title>MinikubeでKubernatesのローカル環境を構築する</title><link>https://www.soudegesu.com/post/docker/install-minikube/</link><pubDate>Wed, 03 Oct 2018 08:39:26 +0900</pubDate><guid>https://www.soudegesu.com/post/docker/install-minikube/</guid><description>builderscon tokyo 2018 で Kubernates に関する 発表がいくつかありました。業務的に使う機会がなかったのですが、これを機に触ってみようと思い、まずは環境構築から、という話で</description></item><item><title>goenvでGoをセットアップする</title><link>https://www.soudegesu.com/post/go/setup_goenv/</link><pubDate>Tue, 02 Oct 2018 08:46:15 +0900</pubDate><guid>https://www.soudegesu.com/post/go/setup_goenv/</guid><description>今の所、プログラミング言語 Go は 1.x 系のバージョンが最新なわけですが、 非公式ながら Go2 の話も盛り上がっているので、 そろそろ真面目にバージョン管理す</description></item><item><title>json.Unmarshalとreflectパッケージを使って構造体を生成する</title><link>https://www.soudegesu.com/post/go/create-struct-with-reflection/</link><pubDate>Wed, 26 Sep 2018 16:17:21 +0900</pubDate><guid>https://www.soudegesu.com/post/go/create-struct-with-reflection/</guid><description>今回は reflect パッケージと json パッケージも使って構造体の生成をしてみます。 json.Unmarshal を使った構造体の生成 以下の構造体を定義します。 1type Msg struct { 2 ID int `json:&amp;#34;id&amp;#34;` 3 Msg string `json:&amp;#34;msg&amp;#34;` 4}</description></item><item><title>Goのreflectパッケージを使ってインスタンスを生成する</title><link>https://www.soudegesu.com/post/go/create-instance-with-reflection/</link><pubDate>Wed, 26 Sep 2018 06:00:59 +0900</pubDate><guid>https://www.soudegesu.com/post/go/create-instance-with-reflection/</guid><description>プログラミング言語 Go で インスタンスを生成する関数を作るにはどうすれば良いかを調査しました。 抽象化されたプログラムを書くには？ 抽象化されたコー</description></item><item><title>Goのinterfaceを使ったmockのテストの書き方を学んだ</title><link>https://www.soudegesu.com/post/go/test-with-interface/</link><pubDate>Mon, 24 Sep 2018 06:12:28 +0900</pubDate><guid>https://www.soudegesu.com/post/go/test-with-interface/</guid><description>プログラミング言語 Go を最近少しづつ触るようになってきました。 主に Python で書いていた簡易なスクリプトを置き換える作業なのですが、 開発の過程で、Go</description></item><item><title>RDS Aurora（PostgreSQL互換）のwalパラメータの有効性について</title><link>https://www.soudegesu.com/post/aws/aurora_postgresql_parameter/</link><pubDate>Mon, 17 Sep 2018 07:00:59 +0900</pubDate><guid>https://www.soudegesu.com/post/aws/aurora_postgresql_parameter/</guid><description>2018/2月頃から東京リージョンでも、RDS Aurora（PostgreSQL互換）が使用可能 になりました。 今回は RDS Aurora（Post</description></item><item><title>builderscon 2018 Tokyo に行ってきた</title><link>https://www.soudegesu.com/post/event/builderscon_2018/</link><pubDate>Fri, 07 Sep 2018 09:48:44 +0900</pubDate><guid>https://www.soudegesu.com/post/event/builderscon_2018/</guid><description>2018/09/06から2018/09/08 の日程で builderscon 2018 Tokyo が開催されました。 家族の体調の都合で 2018/09/08 (最終日) は参加できず、家でベルセルクを見る</description></item><item><title>ExcelをPython（openpyxl）で操作する - セルの読み書き</title><link>https://www.soudegesu.com/post/python/cell-excel-with-openpyxl/</link><pubDate>Sun, 02 Sep 2018 09:38:14 +0900</pubDate><guid>https://www.soudegesu.com/post/python/cell-excel-with-openpyxl/</guid><description>前回の ExcelをPython（openpyxl）で操作する - シートの作成、シート属性値変更 では openpyxl を使って Excelシートの作成 と Excel</description></item><item><title>Terraformで自身のAWSアカウント番号を取得するにはaws_caller_identityを使うと良い</title><link>https://www.soudegesu.com/post/aws/caller_identity/</link><pubDate>Sun, 02 Sep 2018 06:32:25 +0900</pubDate><guid>https://www.soudegesu.com/post/aws/caller_identity/</guid><description>今回は Terraform の小ネタです。AWSアカウント番号を .tfvars ファイルに記載しない方法を紹介します。 .tfvars に記載しがちな情報 ってありますよね。 例えば、AWSアカ</description></item><item><title>ExcelをPython（openpyxl）で操作する - シートの作成、シート属性値変更</title><link>https://www.soudegesu.com/post/python/sheet-excel-with-openpyxl/</link><pubDate>Fri, 31 Aug 2018 08:53:18 +0900</pubDate><guid>https://www.soudegesu.com/post/python/sheet-excel-with-openpyxl/</guid><description>前回の ExcelをPython（openpyxl）で操作する - ファイルの作成と保存 では openpyxl を使って Excelファイルの作成 を行いました。 今回は</description></item><item><title>ExcelをPython（openpyxl）で操作する - ファイルの新規作成、保存、開く</title><link>https://www.soudegesu.com/post/python/create-excel-with-openpyxl/</link><pubDate>Thu, 30 Aug 2018 18:34:52 +0900</pubDate><guid>https://www.soudegesu.com/post/python/create-excel-with-openpyxl/</guid><description>今回はExcelファイルをPythonで操作する方法を紹介したいと思います。 実行環境 実行環境とのそのバージョンは以下になります。 python 3.6 openpyxl 2.5.6 op</description></item><item><title>モバイルアプリやWEBアプリのプロトタイピングはProttでやるといいかもしれない</title><link>https://www.soudegesu.com/post/design/try-prott/</link><pubDate>Sat, 25 Aug 2018 15:54:58 +0900</pubDate><guid>https://www.soudegesu.com/post/design/try-prott/</guid><description>Prott というプロトタイピングツールを試しに使ってみました。 使用した所感をまとめたいと思います。 開発現場のよくある風景 ずれる認識と埋まらない溝 GU</description></item><item><title>ブログをJekyllからHugoへ移行した理由と移行手順</title><link>https://www.soudegesu.com/post/blog/jekyll-to-hugo/</link><pubDate>Wed, 22 Aug 2018 08:00:34 +0900</pubDate><guid>https://www.soudegesu.com/post/blog/jekyll-to-hugo/</guid><description>このブログは Github Pages でホスティングされています。 先日、このブログのサイトジェネレータを Jekyll から Hugo に変更しました。 実行に移した経緯と手順を紹介します</description></item><item><title>Flutter初心者はCodelabsをまずやってみよう!!</title><link>https://www.soudegesu.com/post/dart/flutter/codelabs-is-first-step-for-newcomer/</link><pubDate>Tue, 21 Aug 2018 08:39:33 +0900</pubDate><guid>https://www.soudegesu.com/post/dart/flutter/codelabs-is-first-step-for-newcomer/</guid><description>環境構築の後はCodelabsだ！ 以前書いた記事 Flutterでモバイルアプリケーション（Android/iOS）の開発環境を構築する でFl</description></item><item><title>AMI作成のPackerプロジェクトのワタシ的ベストプラクティス！</title><link>https://www.soudegesu.com/aws/my-packer-best-practice/</link><pubDate>Fri, 17 Aug 2018 00:00:00 +0000</pubDate><guid>https://www.soudegesu.com/aws/my-packer-best-practice/</guid><description>様々なプロジェクトで仕事をするにあたって、AWSのAMI（Amazon Machine Image）を多くつくるようになりました。 今回はPackerプロジェ</description></item><item><title>Google Cloud SDKをセットアップする</title><link>https://www.soudegesu.com/gcp/gcp-command/</link><pubDate>Sun, 05 Aug 2018 00:00:00 +0000</pubDate><guid>https://www.soudegesu.com/gcp/gcp-command/</guid><description>普段はもっぱらAWSなのですが、GCP特有のサービス（機械学習や自然言語、BigQueryなど）を使う機会に恵まれたため、まずその調査から始</description></item><item><title>Gradleとgradle-tomcat-pluginを使ってローカルでTomcatを起動する</title><link>https://www.soudegesu.com/java/tomcat-with-gradle/</link><pubDate>Thu, 02 Aug 2018 00:00:00 +0000</pubDate><guid>https://www.soudegesu.com/java/tomcat-with-gradle/</guid><description>最近自前でwarファイルをJavaコンテナにデプロイする機会が減って、実行可能なfat-jarをsystemdに管理してもらうことが増えまし</description></item><item><title>MySQL 8のAnsibleハマりポイント（rootのパスワード変更とか）</title><link>https://www.soudegesu.com/mysql/mysql8-password/</link><pubDate>Tue, 31 Jul 2018 00:00:00 +0000</pubDate><guid>https://www.soudegesu.com/mysql/mysql8-password/</guid><description>MySQL のメジャーバージョン 8 が 2018/4 にリリースされました。 今回はPacker+Ansibleで MySQL8のAMIを作成しようとして苦労したところを</description></item><item><title>Flutterでモバイルアプリケーション（Android/iOS）の開発環境を構築する</title><link>https://www.soudegesu.com/dart/android-with-flutter/</link><pubDate>Wed, 25 Jul 2018 00:00:00 +0000</pubDate><guid>https://www.soudegesu.com/dart/android-with-flutter/</guid><description>gizmodoの記事 で、Google Fuchsia の話が触れられていました。今回は Fuchsia 上で動作するようになるかもしれない Flutter の環境構築をしてみます。 モチベー</description></item><item><title>jibを使ってJavaアプリケーションのDockerイメージをビルドする</title><link>https://www.soudegesu.com/java/build-docker-image-with-jib/</link><pubDate>Tue, 17 Jul 2018 00:00:00 +0000</pubDate><guid>https://www.soudegesu.com/java/build-docker-image-with-jib/</guid><description>実案件でもJavaアプリケーションをDockerコンテナ上で稼働させる事例もかなり増えていますね。 今回は Jib を使ったDockerfileイメー</description></item><item><title>Amazon Linux2にdockerをインストールする</title><link>https://www.soudegesu.com/aws/amazonlinux2-docker/</link><pubDate>Tue, 10 Jul 2018 00:00:00 +0000</pubDate><guid>https://www.soudegesu.com/aws/amazonlinux2-docker/</guid><description>AMIをAmazon Linux2に変更したのですが、 yum install docker でdockerがインストールできなくなってしまったので対処方法を調査しました。 モチ</description></item><item><title>AWS Batchで前処理をしてGlue CrawlerでAthenaのスキーマを作成する</title><link>https://www.soudegesu.com/aws/aws-batch-and-glue/</link><pubDate>Mon, 02 Jul 2018 00:00:00 +0000</pubDate><guid>https://www.soudegesu.com/aws/aws-batch-and-glue/</guid><description>以前、 S3にエクスポートされたCloudWatch LogsのファイルをGlueのCrawlerでETLしようとして轟沈した話 でGlueを少し</description></item><item><title>matplotlibのpyplot APIをいろいろ試す</title><link>https://www.soudegesu.com/python/pyplot-api/</link><pubDate>Fri, 22 Jun 2018 00:00:00 +0000</pubDate><guid>https://www.soudegesu.com/python/pyplot-api/</guid><description>matplotlibはpythonでデータの可視化をするときに重宝しますが、ドキュメントがパッと見わかりにくいので、取っ掛かりが難しいです。</description></item><item><title>Amazon Linux2(systemd)のプロセス数やファイルディスクリプタ数を変更する</title><link>https://www.soudegesu.com/linux/systemd_limits/</link><pubDate>Sun, 10 Jun 2018 00:00:00 +0000</pubDate><guid>https://www.soudegesu.com/linux/systemd_limits/</guid><description>今回はAmazon Linux から Amazon Linux2 への移行をする機会があったので、 プロセス数やファイルディスクリプタ数といったリソース制限の変更に関して備忘録とし</description></item><item><title>Amazon Linux2(systemd)のシステム時刻を変更する</title><link>https://www.soudegesu.com/linux/systemd_clock/</link><pubDate>Sat, 09 Jun 2018 00:00:00 +0000</pubDate><guid>https://www.soudegesu.com/linux/systemd_clock/</guid><description>今回はAmazon Linux から Amazon Linux2 への移行をする機会があったので、 システム時刻の変更に関して備忘録として残しておきます。 なお、以降の手順は公式の Amazon</description></item><item><title>「ピープルウェア」を読んでマネジメントを考える</title><link>https://www.soudegesu.com/book/peopleware/</link><pubDate>Tue, 05 Jun 2018 00:00:00 +0000</pubDate><guid>https://www.soudegesu.com/book/peopleware/</guid><description>今更ながらですが、「ピープルウェア」を読みました。人通り読み終えたので、所感を書きたいと思います。 以降の内容は 若干のネタバレを含みます ので、</description></item><item><title>S3にエクスポートされたCloudWatch LogsのファイルをGlueのCrawlerでETLしようとして轟沈した話</title><link>https://www.soudegesu.com/aws/glue-process-cloudwatchlogs/</link><pubDate>Wed, 30 May 2018 00:00:00 +0000</pubDate><guid>https://www.soudegesu.com/aws/glue-process-cloudwatchlogs/</guid><description>S3にエクスポートした CloudWatch Logs のログストリームをAWS GlueでETLしようと挑戦してみました。 結論から言うと、GlueのCrawlerでログを</description></item><item><title>Step FunctionsでCloudWatch LogsのロググループをS3へエクスポートする</title><link>https://www.soudegesu.com/aws/export-cloudwatchlogs-to-s3/</link><pubDate>Wed, 23 May 2018 00:00:00 +0000</pubDate><guid>https://www.soudegesu.com/aws/export-cloudwatchlogs-to-s3/</guid><description>CloudWatch LogsにはロググループをS3にエクスポートする機能がついています。 しかし、エクスポート機能には同時実行数制限があるので、 今回は Step Functions を使っ</description></item><item><title>TerraformでS3のバケットポリシーを書く方法</title><link>https://www.soudegesu.com/aws/s3bucket-policy-with-terraform/</link><pubDate>Mon, 21 May 2018 00:00:00 +0000</pubDate><guid>https://www.soudegesu.com/aws/s3bucket-policy-with-terraform/</guid><description>インフラのコード化を進める作業では、コード化のライブラリ作法に倣うため、ドキュメントを見ながら設定を書いていくことが多いです。 Terraform も例外ではな</description></item><item><title>micrometer-registry-datadogを使ったらDatadogのJVMのメトリックがわかりやすくなった</title><link>https://www.soudegesu.com/java/datadog-with-springboot-micrometer/</link><pubDate>Thu, 17 May 2018 00:00:00 +0000</pubDate><guid>https://www.soudegesu.com/java/datadog-with-springboot-micrometer/</guid><description>以前書いた「 Spring Bootを1.5から2へマイグレーションするステップとポイント 」 にて、 Datadogに対してメトリックを送信するの仕組みを micrometer-registry-datadog に</description></item><item><title>「歴史からの発想 停滞と拘束からいかに脱するか」は組織を歴史の側面から見た面白い一冊だった</title><link>https://www.soudegesu.com/book/idea-from-history/</link><pubDate>Sun, 13 May 2018 00:00:00 +0000</pubDate><guid>https://www.soudegesu.com/book/idea-from-history/</guid><description>「 歴史からの発想 停滞と拘束からいかに脱するか 」を読みました。 たまたまamazonサーフィンしていたら見つけた本なのですが、タイトルが気になっ</description></item><item><title>Spring Bootを1.5から2へマイグレーションするステップとポイント</title><link>https://www.soudegesu.com/java/migrate-springboot-1-to-2/</link><pubDate>Fri, 11 May 2018 00:00:00 +0000</pubDate><guid>https://www.soudegesu.com/java/migrate-springboot-1-to-2/</guid><description>Spring Bootの2がリリースされたので、Spring Boot 2.0 Migration Guide を参考に既存のSpring Boot 1.5のプロジェクトをマイグレーションしてみた。行なった</description></item><item><title>子持ちおとっつぁんエンジニアが朝方生活に切り替えて1年が経過した</title><link>https://www.soudegesu.com/engineer-life/one-year-passed-since-the-early-bird-life/</link><pubDate>Mon, 07 May 2018 00:00:00 +0000</pubDate><guid>https://www.soudegesu.com/engineer-life/one-year-passed-since-the-early-bird-life/</guid><description>2017年のゴールデンウィーク明けから私は勤務を朝方に切り替えた。このゴールデンウィークが明けてちょうど1年が経過する。 今回は子持ちのおとっ</description></item><item><title>Expressのサイトマップ生成用npmモジュール（express-sitemapとsitemap）を比較しよう</title><link>https://www.soudegesu.com/nodejs/express-sitemap-module/</link><pubDate>Thu, 03 May 2018 00:00:00 +0000</pubDate><guid>https://www.soudegesu.com/nodejs/express-sitemap-module/</guid><description>以前書いた 「Cloudfront+Lambda@Edgeのサーバレス構成で費用を抑えつつ、動的なWEBコンテンツを作ろう」 の記事で、Node</description></item><item><title>Colaboratoryは機械学習エンジニアための最高のツールだった</title><link>https://www.soudegesu.com/python/colaboratory-is-a-good-tool-for-tensorflow-user/</link><pubDate>Wed, 02 May 2018 00:00:00 +0000</pubDate><guid>https://www.soudegesu.com/python/colaboratory-is-a-good-tool-for-tensorflow-user/</guid><description>普段 Jupter notebook で統計処理や機械学習ライブラリを触っている開発者の方は多いはず。今回は巷で話題の Colaboratory を触ってみました。 Colaboratoryとは Colaboratory は</description></item><item><title>「ティール組織」はこれからの経営者に読んで欲しい一冊</title><link>https://www.soudegesu.com/book/reinventing-organizations/</link><pubDate>Tue, 01 May 2018 00:00:00 +0000</pubDate><guid>https://www.soudegesu.com/book/reinventing-organizations/</guid><description>巷で話題の「ティール組織（洋書名:Reinventing Organizations）」をついに読むことができました。 簡単な書評と所感を書きた</description></item><item><title>「人質の経済学」を読んだ</title><link>https://www.soudegesu.com/book/economics-of-hostages/</link><pubDate>Fri, 27 Apr 2018 00:00:00 +0000</pubDate><guid>https://www.soudegesu.com/book/economics-of-hostages/</guid><description>ロレッタ・ナポリオーニ著の「人質の経済学」を読んだのでざっくり書評をまとめたいと思います。 エンジニアだからと、オライリー本 ばかり読んでいては</description></item><item><title>Pythonの2と3を切り替えて仮想環境を作る</title><link>https://www.soudegesu.com/python/switch-python/</link><pubDate>Thu, 26 Apr 2018 00:00:00 +0000</pubDate><guid>https://www.soudegesu.com/python/switch-python/</guid><description>Python使いであれば、Python 2.x と Python 3.x では文法的な互換性がないため、バージョンを正しく使い分けることは最初の第一歩です。 今回はMac</description></item><item><title>MySQL/PostgreSQLの脆弱性が発表された時に、RDS Aurora使いはどう対処すべきか</title><link>https://www.soudegesu.com/aws/aurora-security/</link><pubDate>Tue, 24 Apr 2018 00:00:00 +0000</pubDate><guid>https://www.soudegesu.com/aws/aurora-security/</guid><description>アプリケーションの脆弱性対応は調査にも時間がかかりますし、大変ですよね。RDS Auroraのようなマネージドサービスの場合、互換性のあるデー</description></item><item><title>AWS LambdaでCasperJSを実行してファイルアップロードを自動化する</title><link>https://www.soudegesu.com/aws/casperjs-on-lambda/</link><pubDate>Mon, 23 Apr 2018 00:00:00 +0000</pubDate><guid>https://www.soudegesu.com/aws/casperjs-on-lambda/</guid><description>AWS上のデータを別サービスに連携するために、AWS LambdaからCasperJSを使ってファイル配置を自動化する仕組みを作ってみました。</description></item><item><title>Pythonで日付文字列からのdatetime変換やタイムゾーンの変更などをいい加減覚えたい</title><link>https://www.soudegesu.com/python/python-datetime/</link><pubDate>Sun, 22 Apr 2018 00:00:00 +0000</pubDate><guid>https://www.soudegesu.com/python/python-datetime/</guid><description>仕事がらpythonを使って、データのコンバータを作成することも度々あるのですが、pythonのdatetimeを使った文字列から日時への変</description></item><item><title>継続的デリバリのためにfeatureのリリースと改善系アイテムのリリースは分けよう</title><link>https://www.soudegesu.com/continuous-delivery/separate-improvement-and-feature/</link><pubDate>Mon, 16 Apr 2018 00:00:00 +0000</pubDate><guid>https://www.soudegesu.com/continuous-delivery/separate-improvement-and-feature/</guid><description>継続的デリバリ(Continuous Delivery)はITの現場で一般的なものと浸透してきました。 継続的デリバリを実現するためには、継続的</description></item><item><title>クロスアカウントで共有されたS3バケットはAWSコンソール上から参照可能なのか</title><link>https://www.soudegesu.com/aws/s3-cross-account/</link><pubDate>Fri, 13 Apr 2018 00:00:00 +0000</pubDate><guid>https://www.soudegesu.com/aws/s3-cross-account/</guid><description>AWS S3はバケットポリシーを設定することで、クロスアカウントでのバケット共有ができます。 設定により、複数のアカウントからバケットに対して操作を</description></item><item><title>AWS LambdaのコードをTerraformでデプロイする</title><link>https://www.soudegesu.com/aws/deploy-lambda-with-terraform/</link><pubDate>Wed, 11 Apr 2018 00:00:00 +0000</pubDate><guid>https://www.soudegesu.com/aws/deploy-lambda-with-terraform/</guid><description>今更感もありますが、今日はTerraformでのAWS Lambdaのコード化について書きます。 AWS Lambdaは Cloud9 がコンソール上に組み込まれた</description></item><item><title>Cloudfront+Lambda@Edgeのサーバレス構成で費用を抑えつつ、動的なWEBコンテンツを作ろう[貧テック]</title><link>https://www.soudegesu.com/aws/hosting-with-cloudfront-lambda-edge-serverless/</link><pubDate>Tue, 03 Apr 2018 00:00:00 +0000</pubDate><guid>https://www.soudegesu.com/aws/hosting-with-cloudfront-lambda-edge-serverless/</guid><description>このブログ自体は github-pages と cloudflare を使って無料でホスティングをしているのですが、稀に 「動的なwebコンテンツを提供したい」 と思うことがあります。今回はお</description></item><item><title>springboot-webfluxのバックプレッシャーを体験してたらいい感じだった</title><link>https://www.soudegesu.com/java/non-blocking-webflux/</link><pubDate>Fri, 16 Mar 2018 00:00:00 +0000</pubDate><guid>https://www.soudegesu.com/java/non-blocking-webflux/</guid><description>2018/3にリリースされた springboot2 から spring5 がバンドルされるようになりました。 リリースの中でも注目機能と言われている webflux 、とりわけ webflux が内包しているリア</description></item><item><title>EthereumでDApps開発のための開発環境を構築する(Truffle&amp;Ganache接続まで)</title><link>https://www.soudegesu.com/ethereum/ethereum-development-with-ganache/</link><pubDate>Sat, 10 Mar 2018 00:00:00 +0000</pubDate><guid>https://www.soudegesu.com/ethereum/ethereum-development-with-ganache/</guid><description>前回の記事 で Ethereum の開発環境の構築を行いました。 今回はさらに Ethereum 用のフレームワークである Truffle と Ganache を使ってローカルでの開発環境を整えようと思います。 T</description></item><item><title>EthereumでDApps開発のための開発環境を構築する(Ethereumで別アカウントに送金まで)</title><link>https://www.soudegesu.com/ethereum/ethereum-development-environment/</link><pubDate>Mon, 05 Mar 2018 00:00:00 +0000</pubDate><guid>https://www.soudegesu.com/ethereum/ethereum-development-environment/</guid><description>以前、IPFS を調査したことがあり、そこから Ethereum の存在を知りました。 昨年頃から本格的に日本でも名前が売れてきて、日本語のソースも増えてきたこと</description></item><item><title>Udemyでサイバーセキュリティコース「The Complete Cyber Security Course : Hackers Exposed」を受講した</title><link>https://www.soudegesu.com/security/take-udemy-cyber-security-hacker-exposed/</link><pubDate>Mon, 26 Feb 2018 00:00:00 +0000</pubDate><guid>https://www.soudegesu.com/security/take-udemy-cyber-security-hacker-exposed/</guid><description>昨今の仮想通貨流出問題を受けて、システム開発に携わるエンジニアにとって、セキュリティの専門家でなくても、サイバーセキュリティに関する学習の必</description></item><item><title>AWS RDS Aurora Cluster(MySQL互換)でパーティションをプロシージャで定期的に追加しつつ、エラーハンドリングもする</title><link>https://www.soudegesu.com/aws/rds-aurora-cluster-partitioning-procedure/</link><pubDate>Mon, 19 Feb 2018 00:00:00 +0000</pubDate><guid>https://www.soudegesu.com/aws/rds-aurora-cluster-partitioning-procedure/</guid><description>AWSのRDS AuroraはOSSのDBミドルウェアと互換性のあるマネージドサービスです。 今回はAuroraのMySQL互換での日付パー</description></item><item><title>Q# 量子コンピューティングプログラミング言語を試す</title><link>https://www.soudegesu.com/q_sharp/what-is-q-sharp/</link><pubDate>Sun, 11 Feb 2018 00:00:00 +0000</pubDate><guid>https://www.soudegesu.com/q_sharp/what-is-q-sharp/</guid><description>もともとは 仮想通貨 を調べていた時に、 量子耐性 という言葉を発見し、量子耐性から 量子耐性のあるアルゴリズム や量子プログラミング言語である Q# に行き</description></item><item><title>JavaプロジェクトをModule System(Java9のProject Jigsaw)にマイグレーションするステップ</title><link>https://www.soudegesu.com/java/java9-modularity/</link><pubDate>Sun, 04 Feb 2018 00:00:00 +0000</pubDate><guid>https://www.soudegesu.com/java/java9-modularity/</guid><description>はじめに 今回はJava 9で追加されたModule System移行に関して説明します。 自身で手を動かすことで、Javaのプロダクションコ</description></item><item><title>AWS Certification ManagerのSSL証明書の検証にはDNS検証を使った方が良い</title><link>https://www.soudegesu.com/aws/validate-certification-manager/</link><pubDate>Wed, 31 Jan 2018 00:00:00 +0000</pubDate><guid>https://www.soudegesu.com/aws/validate-certification-manager/</guid><description>Route53でCertification Managerのドメイン検証ができるようになった DNS を使って AWS Certificate Manager の検証を簡単に の記事にも記載がある</description></item><item><title>ブログ(静的サイト)をHUGOを使って作成する</title><link>https://www.soudegesu.com/blog/hugo/</link><pubDate>Fri, 05 May 2017 00:00:00 +0000</pubDate><guid>https://www.soudegesu.com/blog/hugo/</guid><description>本サイトでは jekyll を使用してブログを作成しているのですが、他にも HUGO や hexo を使用されている方も多くいらっしゃるようなので、今回はHUGOを使用してブ</description></item><item><title>Anaconda環境にTensorflowをインストールする</title><link>https://www.soudegesu.com/tensorflow/tensorflow-anaconda/</link><pubDate>Mon, 06 Mar 2017 00:00:00 +0000</pubDate><guid>https://www.soudegesu.com/tensorflow/tensorflow-anaconda/</guid><description>ここから少しづつ、細切れになってしまいますが、tensorflowで学んだことを書いていこうと思います。 今回はanacondaの仮想環境に対</description></item><item><title>pyenvとpyenv-virtualenvでanacondaと共存する</title><link>https://www.soudegesu.com/python/pyenv/anaconda/</link><pubDate>Tue, 28 Feb 2017 00:00:00 +0000</pubDate><guid>https://www.soudegesu.com/python/pyenv/anaconda/</guid><description>はじめに 今までローカル環境のpythonを切り替えるためにpyenvのみを利用してきました。 anacondaを使用する機会も増えてきたので、</description></item><item><title>TensorFlowのオンライン学習サイトを利用してみる</title><link>https://www.soudegesu.com/tensorflow/tensorflow-online-course/</link><pubDate>Sun, 19 Feb 2017 00:00:00 +0000</pubDate><guid>https://www.soudegesu.com/tensorflow/tensorflow-online-course/</guid><description>機械学習を身につけたい意欲 ここ1年で&amp;quot;AI&amp;quot;や&amp;quot;人工知能&amp;quot;のワードを耳にする機会は大変増えました。 N</description></item><item><title>zsh から fish (shell) へお引っ越しを試みた話</title><link>https://www.soudegesu.com/sh/fish/</link><pubDate>Sat, 18 Feb 2017 00:00:00 +0000</pubDate><guid>https://www.soudegesu.com/sh/fish/</guid><description>fish との出会い これは本当に偶然の出会いで、 「『大きなスクリーンにソースコードを映して、周囲からいろいろヤジ飛ばされながら、ナビゲーターとドライ</description></item><item><title>Docker buildコマンドのimage作成〜コンテナ起動まで</title><link>https://www.soudegesu.com/docker/image/build/</link><pubDate>Tue, 31 Jan 2017 00:00:00 +0000</pubDate><guid>https://www.soudegesu.com/docker/image/build/</guid><description>自宅PC(mac)で簡単なアプリケーションを作ろうと思い、Dockerを使ってmysqlを構築しようとした際の備忘録として残しておきます。 Dockerfile</description></item><item><title>docker-composeを使ってmysql dockerコンテナを起動する</title><link>https://www.soudegesu.com/docker/docker-compose/mysql/</link><pubDate>Tue, 31 Jan 2017 00:00:00 +0000</pubDate><guid>https://www.soudegesu.com/docker/docker-compose/mysql/</guid><description>前回の記事で docker build からの docker run コマンドを使用することでmysqlのdockerコンテナの起動ができました。 個人的にはcliのオプション指定が長く</description></item></channel></rss>